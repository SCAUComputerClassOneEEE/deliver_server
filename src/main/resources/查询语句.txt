-- 客户端登录 方式可选
-- 1提供用户手机号跟密码，查询返回该用户记录
SELECT
	*
FROM
	customer
WHERE
	(
		customer_phone_number = "18899715136"
		AND custonmer_password = "PASSWORD"
	);

-- 2客户端提供用户id
-- 查找该id的所有订单
SELECT
	`order`.order_id
FROM
	`order`
LEFT JOIN package ON `order`.package_id = package.package_id
LEFT JOIN bill ON `order`.order_id = bill.order_id
WHERE
	customer_id = "客户端提供的id";

-- 3通过客户端输入的订单号，返回完整的物流信息
SELECT
	*
FROM
	transport
WHERE
	order_id = "客户端提供的order号"
ORDER BY
	input_time;

-- 4通过custom_id找到他出事的包裹
SELECT DISTINCT
	transport.order_id
FROM
	transport
LEFT JOIN damage_record ON transport.carrier_id = damage_record.carrier_id
AND transport.carrier_type = damage_record.carrier_type
AND transport.transport_times_of_carrier = damage_record.damage_record_time
LEFT JOIN bill ON transport.order_id = bill.order_id
LEFT JOIN customer ON bill.customer_id = customer.customer_id
WHERE
	customer.customer_id = "终端提供的客户id";
===================================================================
-- 5从终端获取数据，新建一个订单。需要插入到三个表中(package、order、bill)  |
--分别提供不同的信息                                                  |
INSERT INTO package                                               |
VALUES                                                            |
	();                                                           |
                                                                  |
INSERT INTO `order`                                               |
VALUES                                                            |
	();                                                           |
                                                                  |
INSERT INTO bill                                                  |
VALUES                                                            |
	();                                                           |
===================================================================
-- 6通过customer_id查询上个月的欠费
SELECT
	SUM(charge) AS `上个月未支付`
FROM
	bill
NATURAL JOIN `order`
NATURAL JOIN customer
WHERE
	is_paid = 0
AND PERIOD_DIFF(
	date_format(now(), '%Y%m'),
	date_format(order_create_time, '%Y%m')
) <= 1
AND customer.customer_id = "客户端提供的id";

-- 7通过用户id，并按服务类型对客户上个月的消费情况进行包裹数统计、消费金额统计
SELECT
	pay_type,
	COUNT(charge),
	SUM(charge)
FROM
	bill
NATURAL JOIN `order`
NATURAL JOIN customer
WHERE
	customer.customer_id = "客户端提供的id"
AND PERIOD_DIFF(
	date_format(now(), '%Y%m'),
	date_format(order_create_time, '%Y%m')
) <= 1
GROUP BY
	pay_type;

-- 8客户端提供数据，对用户信息进行更新（密码，卡号等等）
UPDATE customer
SET customer_password = "提供的密码"
WHERE
	customer_id = "提供的id";
===================================================================
-- 9插入物流信息,由服务端提供                                           |
INSERT INTO transport                                              |
VALUES                                                             |
	();                                                            |
                                                                   |
-- 10新增出事载体，服务端输入                                           |
INSERT INTO damage_record                                          |
VALUES                                                             |
	();                                                            |
===================================================================
-- 11去年寄件总数榜
SELECT
	customer_id,
	customer_name,
	COUNT(charge)
FROM
	bill
NATURAL JOIN `order`
NATURAL JOIN customer
WHERE
	DATE_SUB(CURDATE(), INTERVAL 365 DAY) <= date(order_create_time)
GROUP BY
	customer_id
HAVING
	SUM(charge) >= ALL (
		SELECT
			SUM(charge)
		FROM
			bill
		NATURAL JOIN `order`
		WHERE
			DATE_SUB(CURDATE(), INTERVAL 365 DAY) <= date(order_create_time)
		GROUP BY
			customer_id
	)
ORDER BY
	COUNT(charge) DESC
LIMIT 10;

-- 12去年消费榜
SELECT
	customer_id,
	customer_name,
	SUM(charge)
FROM
	bill
NATURAL JOIN `order`
NATURAL JOIN customer
WHERE
	DATE_SUB(CURDATE(), INTERVAL 365 DAY) <= date(order_create_time)
GROUP BY
	customer_id
HAVING
	SUM(charge) >= ALL (
		SELECT
			SUM(charge)
		FROM
			bill
		NATURAL JOIN `order`
		WHERE
			DATE_SUB(CURDATE(), INTERVAL 365 DAY) <= date(order_create_time)
		GROUP BY
			customer_id
	)
ORDER BY
	SUM(charge) DESC
LIMIT 10;

-- 13客户最多的街道

SELECT
	street,
	COUNT(street) as number
FROM
	customer
GROUP BY
	street
order By number desc limit 10;

HAVING
	COUNT(street) >= ALL (
		SELECT
			COUNT(street)
		FROM
			customer
		GROUP BY
			street
	);

-- 14服务端提供customer_id，查询该用户上个月欠费情况，同6
-- 15服务端提供customer_id，按服务类型查询该用户上个月的包裹数、总消费额同7